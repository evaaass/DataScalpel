package cn.superhuang.data.scalpel.admin.web.resource.impl;

import cn.superhuang.data.scalpel.model.web.GenericResponse;
import cn.superhuang.data.scalpel.admin.service.AuthenticationService;
import cn.superhuang.data.scalpel.admin.service.dto.AuthenticationResultDTO;
import cn.superhuang.data.scalpel.admin.service.dto.RegisterDTO;
import cn.superhuang.data.scalpel.admin.web.resource.request.AuthenticateRequestVO;
import io.swagger.v3.oas.annotations.Operation;
import io.swagger.v3.oas.annotations.tags.Tag;
import jakarta.servlet.http.HttpServletRequest;
import jakarta.servlet.http.HttpServletResponse;
import lombok.RequiredArgsConstructor;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import java.io.IOException;

@Tag(name = "鉴权接口")
@RestController
@RequestMapping("/api/v1/auth")
@RequiredArgsConstructor
public class AuthenticationController {

    private final AuthenticationService service;

    @Operation(summary = "注册，别用")
    @PostMapping("/register")
    public GenericResponse<AuthenticationResultDTO> register(
            @RequestBody RegisterDTO request
    ) {
        return GenericResponse.ok(service.register(request));
    }

    @Operation(summary = "登录，返回Token")
    @PostMapping("/authenticate")
    public GenericResponse<AuthenticationResultDTO> authenticate(
            @RequestBody AuthenticateRequestVO request
    ) {
        return GenericResponse.ok(service.authenticate(request.getUsername(), request.getPassword()));
    }

    @Operation(summary = "更新token")
    @PostMapping("/refresh-token")
    public void refreshToken(
            HttpServletRequest request,
            HttpServletResponse response
    ) throws IOException {
        service.refreshToken(request, response);
    }


}
